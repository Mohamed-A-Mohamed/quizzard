2016-09-29:

Started writing code for the project.
Set up an Express server.
Created a simple login page using Bootstrap.
Added database authentication for login.

2016-09-30:

Changed login page from static HTML to Pug.
Added session support.

2016-10-05:
Very busy week, not much time to work on Quizzard.
Refactored some of the code I wrote last time and added comments.
Most of it will still probably be rewritten in the future, but it's a start.
Completed a basic account creation function which can be used to add students.

2016-10-06:
Extracted the database connection to its own file.
Added questions.js file which will facilitate interaction with the questions
collection in the database.
Started work on an addQuestion function to insert questions into the database.

2016-10-11:
Create a temporary question addition form which adds a question to the database.

2016-10-13:
Started work on the home page proper.
Created a question selector module which fetches questions from the database,
sorted by a given criterion.
Created the main body of the home page, consisting of two sections: the
question list and the sidebar.
Populated the question list with questions from the database, displaying basic
information about them.
Added user's name and points total to sidebar display.
Gave each question its question ID as its HTML ID, allowing the clicked question
to be easily detected.

2016-10-14:
Added a sort button above the question list with a basic dropdown menu.
Updated the question selector to allow sorting by topic or by point count.
Moved the question list into a separate template file, allowing it to be
re-rendered with new information without having to re-render the whole page.
Implemented question list sorting through an AJAX request to the server to
render a new question list with a given sort criterion.

2016-10-19:
Send AJAX request to server when a question is clicked in the question list on
the home page. The request contains the ID of the question that was clicked.
Redirect browser to /question if the request was successful.

2016-10-20:
Added lookupQuestion function to questions module to find a single question
object by its ID.
When a question is clicked, server looks up the clicked question ID. If it is
valid, stores the question object in the session's user object.
Added a simple question view. Like the home view, it has a main area and a
sidebar. The sidebar CSS from the homepage was extracted to a separate file so
it could be shared between home and question views.
In the main area of the question page, the question text, a text box for the
answer and a submit button are displayed. The sidebar shows additional
information such as the question topic, number of points and stats about how
many times it has been attempted/answered. More information will be added to
this in the future.
Clicking submit doesn't do anything... yet.

2016-10-21:
Fixed the form on the question page and added submit event listener.
Send a HTTP POST with the user's answer when the submit button is clicked.
Added checkAnswer function to questions.js which takes a question object
and the user's submitted answer, compares the answers, updates the question
object accordingly and replaces the old question object in the database with
the new one.
The answering functionality is not complete; the student's database entry
still needs to be updated and the front end needs to respond to the result
of the question attempt.

2016-10-24:
Added user's level and success rate to the sidebar on the home view.

2016-10-26:
Created a navbar. It is displayed at the top of the page in the home and
question views. Added links for Home, Current Question, Leaderboard and About
pages. Placed a logout button on the right side of the navbar and implemented
logout functionality.
